{"version":3,"file":"static/js/8135.5d81f491.chunk.js","mappings":"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","sources":["component/Basic/FilledInput.jsx","component/pages/Ledger/ViewLedger.jsx","config/AxiosConfig.js","helpers/notificationService.js","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js"],"sourcesContent":["// import React from \"react\";\r\n// import styled from \"styled-components\";\r\n\r\n// const InputBox = styled.div`\r\n//   padding: 0.5rem 1rem;\r\n//   background-color: #f4f6f8;\r\n//   border-radius: 5px;\r\n//   border: none;\r\n// `;\r\n// const InputLabel = styled.div`\r\n//   padding: 0.5rem 0px;\r\n//   color: #083344;\r\n//   border-radius: 5px;\r\n//   border: none;\r\n// `;\r\n\r\n// const snakeToTitleCase = (snakeCaseStr) => {\r\n//   const words = snakeCaseStr.split(\"_\");\r\n//   const titleCaseStr = words\r\n//     .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\r\n//     .join(\" \");\r\n\r\n//   return titleCaseStr;\r\n// };\r\n\r\n// function FilledInput({ label, value, ...otherProps }) {\r\n//   return (\r\n//     <div {...otherProps}>\r\n//       <InputLabel>{snakeToTitleCase(label)}</InputLabel>\r\n//       <InputBox>{value ? value : \"Not Set\"}</InputBox>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default FilledInput;\r\n\r\nimport React from \"react\";\r\n\r\nconst snakeToTitleCase = (snakeCaseStr) => {\r\n  const words = snakeCaseStr.split(\"_\");\r\n  const titleCaseStr = words\r\n    .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\r\n    .join(\" \");\r\n\r\n  return titleCaseStr;\r\n};\r\n\r\nfunction FilledInput({ label, value, ...otherProps }) {\r\n  return (\r\n    <div {...otherProps}>\r\n      <div\r\n        style={{\r\n          padding: \"0.5rem 0px\",\r\n          color: \"#083344\",\r\n          borderRadius: \"5px\",\r\n          border: \"none\",\r\n        }}\r\n      >\r\n        {snakeToTitleCase(label)}\r\n      </div>\r\n      <div\r\n        style={{\r\n          padding: \"0.5rem 1rem\",\r\n          backgroundColor: \"#f4f6f8\",\r\n          borderRadius: \"5px\",\r\n          border: \"none\",\r\n        }}\r\n      >\r\n        {value ? value : \"Not Set\"}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FilledInput;\r\n\r\n","import { Box, Button, Card, CardContent, Grid, Typography, useTheme } from '@mui/material'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport FilledInput from '../../Basic/FilledInput';\r\nimport { startLoading, stopLoading } from '../../../redux/slices/loadingSlice';\r\nimport { showErrorMessage } from '../../../helpers/notificationService';\r\nimport axiosInstance from '../../../config/AxiosConfig';\r\nimport AxiosInstancePaths from '../../../config/AxiosInstancePaths';\r\n\r\nfunction ViewLedger() {\r\n    const [ledger, setLedger] = useState();\r\n    const { id } = useParams();\r\n    const theme = useTheme();\r\n    const dispatch = useDispatch();\r\n\r\n    const fetchLedgerData = async () => {\r\n        try {\r\n            dispatch(startLoading());\r\n            const response = await axiosInstance.get(\r\n                AxiosInstancePaths.Ledgers.GET_BY_ID + id\r\n            );\r\n            if (response.data?.payload) {\r\n                setLedger(response.data?.payload?.result);\r\n            }\r\n            dispatch(stopLoading());\r\n        } catch (error) {\r\n            console.log(error);\r\n            showErrorMessage(error?.response?.data?.message);\r\n            dispatch(stopLoading());\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchLedgerData();\r\n        // eslint-disable-next-line\r\n    }, [id]);\r\n\r\n\r\n    return (\r\n        <Grid container spacing={2} alignItems=\"stretch\" justifyContent={'end'}>\r\n            <Grid item xs={12} md={6}>\r\n                <Card style={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\r\n                    <CardContent style={{ flex: 1 }}>\r\n                        <Typography variant=\"h4\" style={{ fontWeight: \"bold\", marginBottom: '0.75rem' }} sx={{ marginBottom: \"0.5rem\" }}>\r\n                            Ledger Details\r\n                        </Typography>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12} md={6}>\r\n                                <FilledInput label=\"invoice\" value={ledger?.invoice_id || \"Not Set\"} disabled />\r\n                            </Grid>\r\n                            <Grid item xs={12} md={6}>\r\n                                <FilledInput label=\"bill_amount\" value={ledger?.bill_amount || \"Not Set\"} disabled />\r\n                            </Grid>\r\n                            <Grid item xs={12} md={6}>\r\n                                <FilledInput label=\"payment_amount\" value={ledger?.payment_amount || \"Not Set\"} disabled />\r\n                            </Grid>\r\n                            <Grid item xs={12} md={6}>\r\n                                <FilledInput label=\"type\" value={ledger?.type || \"Not Set\"} disabled />\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n\r\n            {/* Back Button */}\r\n            <Grid item xs={12}>\r\n                <Box sx={{ display: \"flex\", justifyContent: \"flex-end\", gap: '1rem' }}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        sx={{\r\n                            color: theme.palette.common.white,\r\n                            width: \"max-content\",\r\n                            backgroundColor: theme.palette.warning.main,\r\n                            \"&:hover\": {\r\n                                backgroundColor: theme.palette.warning.main,\r\n                            },\r\n                        }}\r\n                        onClick={() => window.history.back()}\r\n                    >\r\n                        Back\r\n                    </Button>\r\n                </Box>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default ViewLedger\r\n","import axios from \"axios\";\r\nimport AxiosInstancePaths from \"./AxiosInstancePaths\";\r\nimport { AppConfig } from \"./AppConfig\";\r\nimport { clearLocalStorage } from \"../helpers\";\r\n\r\n// Create an Axios instance with default settings\r\nconst axiosInstance = axios.create({\r\n  baseURL: AxiosInstancePaths.base_url,\r\n  timeout: 10000, // Request timeout in milliseconds\r\n  headers: {\r\n    Accept: \"application/json, application/octet-stream\",\r\n  },\r\n  withCredentials: false,\r\n});\r\n\r\n// Flag to check if the token is being refreshed\r\nlet isRefreshing = false;\r\nlet refreshSubscribers = [];\r\n\r\n// Function to subscribe to token refresh\r\nfunction subscribeTokenRefresh(cb) {\r\n  refreshSubscribers.push(cb);\r\n}\r\n\r\n// Function to notify subscribers about new token\r\nfunction onRefreshed(token) {\r\n  refreshSubscribers.forEach((cb) => cb(token));\r\n  refreshSubscribers = [];\r\n}\r\n\r\n// Add a request interceptor\r\naxiosInstance.interceptors.request.use(\r\n  (config) => {\r\n    // Add the authorization token to the request headers if available\r\n    const token = localStorage.getItem(AppConfig.localStorageKeys.token);\r\n    if (token) {\r\n      config.headers[\"Authorization\"] = `Bearer ${token}`;\r\n      config.withCredentials = true;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Add a response interceptor\r\naxiosInstance.interceptors.response.use(\r\n  (response) => {\r\n    // Any status code within the range of 2xx triggers this function\r\n    return response;\r\n  },\r\n  (error) => {\r\n    const { config, response } = error;\r\n    const originalRequest = config;\r\n    if (response.data.message === \"Token has expired\") {\r\n      if (!isRefreshing) {\r\n        isRefreshing = true;\r\n        const refreshToken = localStorage.getItem(\r\n          AppConfig.localStorageKeys.refresh_token\r\n        );\r\n\r\n        return axiosInstance\r\n          .post(AxiosInstancePaths.refresh_token_url, { refreshToken })\r\n          .then(({ data }) => {\r\n            const new_token = data?.payload?.accessToken;\r\n\r\n            localStorage.setItem(AppConfig.localStorageKeys.token, new_token);\r\n            isRefreshing = false;\r\n            onRefreshed(new_token);\r\n            originalRequest.headers[\"Authorization\"] = `Bearer ${new_token}`;\r\n            return axiosInstance(originalRequest);\r\n          })\r\n          .catch((err) => {\r\n            console.error(\"Failed to refresh token:\", err);\r\n            clearLocalStorage();\r\n            window.location.href = AxiosInstancePaths.login_path;\r\n            return Promise.reject(error);\r\n          });\r\n      }\r\n\r\n      const retryOriginalRequest = new Promise((resolve) => {\r\n        subscribeTokenRefresh((token) => {\r\n          originalRequest.headers[\"Authorization\"] = `Bearer ${token}`;\r\n          resolve(axiosInstance(originalRequest));\r\n        });\r\n      });\r\n      return retryOriginalRequest;\r\n    }\r\n\r\n    if (response.data.message === \"Token is invalid\") {\r\n      clearLocalStorage();\r\n      window.location.href = AxiosInstancePaths.login_path;\r\n    }\r\n\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default axiosInstance;\r\n","import { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst options = {\r\n  position: \"top-center\",\r\n  closeButton: false,\r\n  progress: false,\r\n};\r\n\r\nexport const showSuccessMessage = (message) => {\r\n  toast.success(message, options);\r\n};\r\n\r\nexport const showErrorMessage = (message) => {\r\n  toast.error(message, options);\r\n};\r\n\r\nexport const showWarningMessage = (message) => {\r\n  toast.warn(message, options);\r\n};\r\n\r\nexport const showInfoMessage = (message) => {\r\n  toast.info(message, options);\r\n};\r\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;"],"names":["_ref","label","value","otherProps","_jsxs","children","_jsx","style","padding","color","borderRadius","border","snakeCaseStr","split","map","word","charAt","toUpperCase","slice","join","backgroundColor","ledger","setLedger","useState","id","useParams","theme","useTheme","dispatch","useDispatch","useEffect","async","_response$data","startLoading","response","axiosInstance","get","AxiosInstancePaths","Ledgers","GET_BY_ID","_response$data2","_response$data2$paylo","data","payload","result","stopLoading","error","_error$response","_error$response$data","console","log","showErrorMessage","message","fetchLedgerData","Grid","container","spacing","alignItems","justifyContent","item","xs","md","Card","height","display","flexDirection","CardContent","flex","Typography","variant","fontWeight","marginBottom","sx","FilledInput","invoice_id","disabled","bill_amount","payment_amount","type","Box","gap","Button","palette","common","white","width","warning","main","onClick","window","history","back","axios","create","baseURL","base_url","timeout","headers","Accept","withCredentials","isRefreshing","refreshSubscribers","interceptors","request","use","config","token","localStorage","getItem","AppConfig","localStorageKeys","concat","Promise","reject","originalRequest","refreshToken","refresh_token","post","refresh_token_url","then","_data$payload","new_token","accessToken","setItem","forEach","cb","catch","err","clearLocalStorage","location","href","login_path","resolve","push","options","position","closeButton","progress","showSuccessMessage","toast","success","getCardContentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardContentRoot","styled","name","overridesResolver","props","styles","root","paddingBottom","React","inProps","ref","useDefaultProps","className","component","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","as","clsx","getCardUtilityClass","CardRoot","Paper","overflow","raised","elevation","undefined"],"sourceRoot":""}