{"version":3,"file":"static/js/7475.cbd6c4eb.chunk.js","mappings":"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","sources":["component/pages/Products/Category/EditCategory.jsx"],"sourcesContent":["import { useNavigate, useParams } from \"react-router-dom\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport TextInput from \"../../../Form/TextInput\";\r\nimport { Box, Button, Card, CardContent, Grid, Typography } from \"@mui/material\";\r\nimport FileUpload from \"../../../Form/FileUpload\";\r\nimport Editor from \"../../../Form/Editor\";\r\nimport AxiosInstancePaths from \"../../../../config/AxiosInstancePaths\";\r\nimport axiosInstance from \"../../../../config/AxiosConfig\";\r\nimport { startLoading, stopLoading } from \"../../../../redux/slices/loadingSlice\";\r\nimport { showErrorMessage, showSuccessMessage } from \"../../../../helpers/notificationService\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { updateCategorySchema, validateSchema } from \"../../../../validation/validationSchema\";\r\nimport { createGeneralOptions, objectToFormData } from \"../../../../helpers\";\r\nimport SelectInput from \"../../../Form/SelectInput\";\r\nimport { useTheme } from \"@mui/material\";\r\nimport ImageWithPreview from \"../../../Basic/ImagePreview\";\r\nimport BackNavigate from \"../../../Basic/BackNavigate\";\r\n\r\n\r\nfunction EditCategory() {\r\n  const { id } = useParams();\r\n  const theme = useTheme();\r\n  const [formData, setFormData] = useState({});\r\n  const [category, setCategory] = useState();\r\n  const [errors, setErrors] = useState({});\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const [langCode, setLangCode] = useState(\"\")\r\n  const [languages, setLanguages] = useState([]);\r\n\r\n  const handleSelectChange = (name, value) => {\r\n    const keys = name.split(\".\");\r\n    setFormData((prevData) => {\r\n      let newData = { ...prevData };\r\n      let current = newData;\r\n      for (let i = 0; i < keys.length - 1; i++) {\r\n        current[keys[i]] = current[keys[i]] || {};\r\n        current = current[keys[i]];\r\n      }\r\n      current[keys[keys.length - 1]] = value;\r\n      return newData;\r\n    });\r\n\r\n    setErrors((prevErrors) => {\r\n      let newErrors = { ...prevErrors };\r\n      let current = newErrors;\r\n      for (let i = 0; i < keys.length - 1; i++) {\r\n        current[keys[i]] = current[keys[i]] || {};\r\n        current = current[keys[i]];\r\n      }\r\n      delete current[keys[keys.length - 1]];\r\n      return newErrors;\r\n    });\r\n  };\r\n\r\n  const updateCategory = async () => {\r\n    try {\r\n      const isValid = await validateSchema(updateCategorySchema, formData, setErrors);\r\n      if (!isValid) {\r\n        return;\r\n      }\r\n\r\n      const newFormData = new FormData();\r\n      let documents = {}\r\n      let tempFormData = { ...formData };\r\n      if (formData?.logo) {\r\n        documents.logo = formData.logo\r\n        delete tempFormData.logo\r\n      }\r\n\r\n      objectToFormData(newFormData, documents);\r\n      dispatch(startLoading());\r\n      const response = await axiosInstance.put(\r\n        AxiosInstancePaths.Categories.UPDATE_BY_ID + id,\r\n        newFormData, {\r\n        params: {\r\n          lang_code: langCode || 'en',\r\n          payload: JSON.stringify(tempFormData)\r\n        },\r\n      }\r\n      );\r\n\r\n      showSuccessMessage(response?.data?.message);\r\n      dispatch(stopLoading());\r\n      navigate('/category')\r\n    } catch (error) {\r\n      console.log(error);\r\n      showErrorMessage(error?.response?.data?.message);\r\n      dispatch(stopLoading());\r\n    }\r\n  };\r\n\r\n  const fetCategoryData = async () => {\r\n    try {\r\n      dispatch(startLoading());\r\n      const response = await axiosInstance.get(\r\n        AxiosInstancePaths.Categories.GET_BY_ID + id, {\r\n        params: {\r\n          lang_code: langCode || 'en'\r\n        },\r\n      }\r\n      );\r\n      if (response.data?.payload) {\r\n        setCategory(response.data?.payload?.result);\r\n      }\r\n      dispatch(stopLoading());\r\n    } catch (error) {\r\n      console.log(error);\r\n      showErrorMessage(error?.response?.data?.message);\r\n      dispatch(stopLoading());\r\n    }\r\n  };\r\n\r\n  const fetchLanguageData = async () => {\r\n    try {\r\n      dispatch(startLoading());\r\n      const response = await axiosInstance.get(\r\n        AxiosInstancePaths.Languages.GET_LIST\r\n      );\r\n      if (response.data?.payload) {\r\n        setLanguages(response.data?.payload?.result?.data);\r\n        setLangCode(response.data?.payload?.result?.data[0]?.lang_code)\r\n      }\r\n      dispatch(stopLoading());\r\n    } catch (error) {\r\n      console.log(error);\r\n      showErrorMessage(error?.response?.data?.message);\r\n      dispatch(stopLoading());\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetCategoryData();\r\n    // eslint-disable-next-line\r\n  }, [id, langCode]);\r\n\r\n  useEffect(() => {\r\n    fetchLanguageData()\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <Grid container spacing={2} alignItems=\"stretch\" style={{ display: 'flex', justifyContent: 'end' }}>\r\n      <Grid item xs={12} sx={{ paddingTop: { xs: '0.5rem !important', sx: '0.5rem !important', md: '0px !important' } }} >\r\n        <BackNavigate />\r\n      </Grid>\r\n      <Grid item xs={12} md={6}>\r\n        <Card style={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\r\n          <CardContent style={{ flex: 1 }}>\r\n            <Typography variant=\"h4\" style={{ fontWeight: \"bold\" }} sx={{ marginBottom: \"0.5rem\", width: \"100%\", textAlign: \"left\" }}>\r\n              Category Details\r\n            </Typography>\r\n            <Grid container spacing={2} sx={{ width: \"100%\" }}>\r\n              <Grid item xs={12} sm={12} sx={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                <ImageWithPreview\r\n                  src={\r\n                    formData?.logo?.length > 0\r\n                      ? URL.createObjectURL(formData.logo[0])\r\n                      : category?.logo ? AxiosInstancePaths.base_url + category.logo : \"\"\r\n                  }\r\n                  alt=\"Brand Logo\"\r\n                  height=\"145px\"\r\n                  width=\"145px\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} md={6} lg={6} sm={12}>\r\n                <FileUpload inputName=\"logo\" handleChange={handleSelectChange} error={errors?.logo?.message} />\r\n              </Grid>\r\n              <Grid item xs={12} md={6} lg={6} sm={12}>\r\n                <SelectInput\r\n                  name=\"language\"\r\n                  startEdit={true}\r\n                  seperatedLabel={false}\r\n                  defaultValue={langCode}\r\n                  options={createGeneralOptions(languages, \"lang_name\", \"lang_code\")}\r\n                  handleChange={(name, value) => setLangCode(value)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} md={6} lg={6} sm={12}>\r\n                <TextInput\r\n                  name={\"category_name\"}\r\n                  startEdit={true}\r\n                  error={errors?.category_name?.message}\r\n                  defaultValue={formData?.category_name || category?.category_name}\r\n                  handleChange={handleSelectChange}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} md={12} lg={12} sm={12}>\r\n                <Editor\r\n                  name={\"description\"}\r\n                  error={errors?.description?.message}\r\n\r\n                  defaultValue={formData?.description || category?.description}\r\n                  handleChange={handleSelectChange}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n\r\n\r\n      <Grid item xs={12}>\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            justifyContent: \"flex-end\",\r\n            gap: \"1rem\",\r\n          }}\r\n        >\r\n          <Button\r\n            variant=\"contained\"\r\n\r\n            sx={{\r\n              color: theme.palette.common.white,\r\n              width: \"max-content\",\r\n              backgroundColor: theme.palette.success.main,\r\n              \"&:hover\": {\r\n                backgroundColor: theme.palette.success.main,\r\n              },\r\n            }}\r\n            onClick={updateCategory}\r\n          >\r\n            Save\r\n          </Button>\r\n        </Box>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default EditCategory;\r\n"],"names":["_formData$logo","_errors$logo","_errors$category_name","_errors$description","id","useParams","theme","useTheme","formData","setFormData","useState","category","setCategory","errors","setErrors","dispatch","useDispatch","navigate","useNavigate","langCode","setLangCode","languages","setLanguages","handleSelectChange","name","value","keys","split","prevData","newData","current","i","length","prevErrors","newErrors","useEffect","async","_response$data2","startLoading","response","axiosInstance","get","AxiosInstancePaths","Categories","GET_BY_ID","params","lang_code","_response$data3","_response$data3$paylo","data","payload","result","stopLoading","error","_error$response2","_error$response2$data","console","log","showErrorMessage","message","fetCategoryData","_response$data4","Languages","GET_LIST","_response$data5","_response$data5$paylo","_response$data5$paylo2","_response$data6","_response$data6$paylo","_response$data6$paylo2","_response$data6$paylo3","_error$response3","_error$response3$data","fetchLanguageData","_jsxs","Grid","container","spacing","alignItems","style","display","justifyContent","children","_jsx","item","xs","sx","paddingTop","md","BackNavigate","Card","height","flexDirection","CardContent","flex","Typography","variant","fontWeight","marginBottom","width","textAlign","sm","ImageWithPreview","src","logo","URL","createObjectURL","base_url","alt","lg","FileUpload","inputName","handleChange","SelectInput","startEdit","seperatedLabel","defaultValue","options","createGeneralOptions","TextInput","category_name","Editor","description","Box","gap","Button","color","palette","common","white","backgroundColor","success","main","onClick","_response$data","validateSchema","updateCategorySchema","newFormData","FormData","documents","tempFormData","objectToFormData","put","UPDATE_BY_ID","JSON","stringify","showSuccessMessage","_error$response","_error$response$data"],"sourceRoot":""}