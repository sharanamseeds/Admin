{"version":3,"file":"static/js/7281.628cf879.chunk.js","mappings":"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","sources":["component/Basic/DropDrown.jsx","component/Basic/InputError.jsx","component/Basic/Pagination.jsx","component/Basic/TableHeaderPart.jsx","component/Form/SelectInput.jsx","component/pages/Ledger/LedgerListUser.jsx","config/AxiosConfig.js","constant/Options.js","helpers/notificationService.js"],"sourcesContent":["import React from \"react\";\r\nimport { IconButton, Menu, MenuItem, ListItemText } from \"@mui/material\";\r\n\r\nconst DropDrown = ({ icon, onSelect, name, options, value = \"\" }) => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleSelect = (selectedValue) => {\r\n    handleClose();\r\n    onSelect(name, selectedValue);\r\n  };\r\n\r\n  const isSelected = (optionValue) => {\r\n\r\n    // Special handling for boolean false\r\n    if (value === false && optionValue === false) {\r\n      return true;\r\n    }\r\n    return optionValue === value || optionValue?.toString() === value?.toString();\r\n  };\r\n\r\n  return (\r\n    <div style={{ position: \"relative\" }}>\r\n      <IconButton onClick={handleClick}>{icon}</IconButton>\r\n      <Menu anchorEl={anchorEl} open={Boolean(anchorEl)} onClose={handleClose}>\r\n        {options?.map((option, optionIndex) => (\r\n          <MenuItem\r\n            key={optionIndex}\r\n            onClick={() => handleSelect(option.value)}\r\n            selected={isSelected(option.value)} // Mark item as selected\r\n          >\r\n            <ListItemText\r\n              primary={option.label}\r\n              style={{\r\n                fontWeight: isSelected(option.value) ? \"bold\" : \"normal\",\r\n              }}\r\n            />\r\n          </MenuItem>\r\n        ))}\r\n      </Menu>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DropDrown;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nconst snakeToTitleCase = (snakeCaseStr) => {\r\n  const words = snakeCaseStr.split('_');\r\n  const titleCaseStr = words\r\n    .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\r\n    .join(' ');\r\n\r\n  return titleCaseStr;\r\n};\r\n\r\nconst InputError = ({ message }) => {\r\n  const [shouldShake, setShouldShake] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (message) {\r\n      setShouldShake(true);\r\n      const timer = setTimeout(() => {\r\n        setShouldShake(false);\r\n      }, 500);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [message]);\r\n\r\n  const shakeAnimation = {\r\n    animation: shouldShake ? 'shake 0.5s ease-in-out' : '',\r\n  };\r\n\r\n  const shakeKeyframes = `\r\n    @keyframes shake {\r\n      0% { transform: translateX(0); }\r\n      25% { transform: translateX(-5px); }\r\n      50% { transform: translateX(5px); }\r\n      75% { transform: translateX(-5px); }\r\n      100% { transform: translateX(0); }\r\n    }\r\n  `;\r\n\r\n  const errorContainerStyle = {\r\n    color: 'red',\r\n    fontSize: '14px',\r\n    padding: '0.5rem',\r\n    textAlign: 'left',\r\n    ...shakeAnimation,\r\n  };\r\n\r\n  return (\r\n    <div style={errorContainerStyle}>\r\n      {snakeToTitleCase(message)}\r\n      <style>{shakeKeyframes}</style>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputError;\r\n","// // src/Components/PaginationComponent.js\r\n// import React from \"react\";\r\n// import styled from \"styled-components\";\r\n\r\n// const PaginationContainer = styled.div`\r\n//   display: flex;\r\n//   justify-content: space-between;\r\n//   align-items: center;\r\n//   padding: 20px;\r\n//   background-color: #f4f6f8;\r\n//   border-radius: 10px;\r\n//   box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n//   margin-top: 20px;\r\n// `;\r\n\r\n// const PaginationButtons = styled.div`\r\n//   display: flex;\r\n//   align-items: center;\r\n// `;\r\n\r\n// const PageButton = styled.button`\r\n//   background-color: white;\r\n//   border: 1px solid #ddd;\r\n//   padding: 5px 10px;\r\n//   margin: 0 5px;\r\n//   border-radius: 5px;\r\n//   cursor: pointer;\r\n//   &:hover {\r\n//     background-color: #f0f0f0;\r\n//   }\r\n//   ${(props) =>\r\n//     props.active &&\r\n//     `\r\n//     background-color: #e0e0e0;\r\n//     font-weight: bold;\r\n//   `}\r\n// `;\r\n\r\n// const Ellipsis = styled.span`\r\n//   padding: 5px 10px;\r\n// `;\r\n\r\n// const ItemsPerPage = styled.div`\r\n//   display: flex;\r\n//   align-items: center;\r\n// `;\r\n\r\n// const Select = styled.select`\r\n//   padding: 5px;\r\n//   margin-left: 10px;\r\n//   border-radius: 5px;\r\n//   border: 1px solid #ddd;\r\n//   cursor: pointer;\r\n// `;\r\n\r\n// const Pagination = ({\r\n//   currentPage,\r\n//   totalItems,\r\n//   itemsPerPage,\r\n//   onPageChange,\r\n//   onItemsPerPageChange,\r\n// }) => {\r\n//   const handlePageChange = (page) => {\r\n//     if (page < 1 || page > totalPages) return;\r\n//     onPageChange(page);\r\n//   };\r\n\r\n//   const totalPages = Math.ceil(totalItems / itemsPerPage);\r\n\r\n//   const getPaginationRange = () => {\r\n//     const totalNumbers = 5;\r\n//     const totalBlocks = totalNumbers + 2;\r\n\r\n//     if (totalPages > totalBlocks) {\r\n//       let startPage, endPage;\r\n//       if (currentPage <= 3) {\r\n//         startPage = 1;\r\n//         endPage = 5;\r\n//       } else if (currentPage + 2 >= totalPages) {\r\n//         startPage = totalPages - 4;\r\n//         endPage = totalPages;\r\n//       } else {\r\n//         startPage = currentPage - 2;\r\n//         endPage = currentPage + 2;\r\n//       }\r\n//       return Array.from(\r\n//         { length: endPage - startPage + 1 },\r\n//         (_, i) => startPage + i\r\n//       );\r\n//     }\r\n\r\n//     return Array.from({ length: totalPages }, (_, i) => i + 1);\r\n//   };\r\n\r\n//   const paginationRange = getPaginationRange();\r\n\r\n//   return (\r\n//     <>\r\n//       {totalPages > 1 && (\r\n//         <PaginationContainer>\r\n//           <PaginationButtons>\r\n//             <PageButton onClick={() => handlePageChange(1)}>&laquo;</PageButton>\r\n//             <PageButton onClick={() => handlePageChange(currentPage - 1)}>\r\n//               &lsaquo;\r\n//             </PageButton>\r\n//             {paginationRange[0] > 1 && <Ellipsis>...</Ellipsis>}\r\n//             {paginationRange.map((page) => (\r\n//               <PageButton\r\n//                 key={page}\r\n//                 active={page === currentPage}\r\n//                 onClick={() => handlePageChange(page)}\r\n//               >\r\n//                 {page}\r\n//               </PageButton>\r\n//             ))}\r\n//             {paginationRange[paginationRange.length - 1] < totalPages && (\r\n//               <Ellipsis>...</Ellipsis>\r\n//             )}\r\n//             <PageButton onClick={() => handlePageChange(currentPage + 1)}>\r\n//               &rsaquo;\r\n//             </PageButton>\r\n//             <PageButton onClick={() => handlePageChange(totalPages)}>\r\n//               &raquo;\r\n//             </PageButton>\r\n//           </PaginationButtons>\r\n//           <ItemsPerPage>\r\n//             <Select\r\n//               id=\"itemsPerPage\"\r\n//               value={itemsPerPage}\r\n//               onChange={(e) => onItemsPerPageChange(Number(e.target.value))}\r\n//             >\r\n//               <option value={5}>5</option>\r\n//               <option value={10}>10</option>\r\n//               <option value={50}>50</option>\r\n//             </Select>\r\n//           </ItemsPerPage>\r\n//         </PaginationContainer>\r\n//       )}\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default Pagination;\r\n\r\nimport React from \"react\";\r\n\r\nconst Pagination = ({\r\n  currentPage,\r\n  totalItems,\r\n  itemsPerPage,\r\n  onPageChange,\r\n  onItemsPerPageChange,\r\n}) => {\r\n  const handlePageChange = (page) => {\r\n    if (page < 1 || page > totalPages) return;\r\n    onPageChange(page);\r\n  };\r\n\r\n  const totalPages = Math.ceil(totalItems / itemsPerPage);\r\n\r\n  const getPaginationRange = () => {\r\n    const totalNumbers = 5;\r\n    const totalBlocks = totalNumbers + 2;\r\n\r\n    if (totalPages > totalBlocks) {\r\n      let startPage, endPage;\r\n      if (currentPage <= 3) {\r\n        startPage = 1;\r\n        endPage = 5;\r\n      } else if (currentPage + 2 >= totalPages) {\r\n        startPage = totalPages - 4;\r\n        endPage = totalPages;\r\n      } else {\r\n        startPage = currentPage - 2;\r\n        endPage = currentPage + 2;\r\n      }\r\n      return Array.from(\r\n        { length: endPage - startPage + 1 },\r\n        (_, i) => startPage + i\r\n      );\r\n    }\r\n\r\n    return Array.from({ length: totalPages }, (_, i) => i + 1);\r\n  };\r\n\r\n  const paginationRange = getPaginationRange();\r\n\r\n  return (\r\n    <>\r\n      {totalPages > 1 && (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n            padding: \"20px\",\r\n            backgroundColor: \"#f4f6f8\",\r\n            borderRadius: \"10px\",\r\n            boxShadow: \"0 2px 4px rgba(0, 0, 0, 0.1)\",\r\n            marginTop: \"20px\",\r\n          }}\r\n        >\r\n          <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n            <button\r\n              onClick={() => handlePageChange(1)}\r\n              style={{\r\n                backgroundColor: \"white\",\r\n                border: \"1px solid #ddd\",\r\n                padding: \"5px 10px\",\r\n                margin: \"0 5px\",\r\n                borderRadius: \"5px\",\r\n                cursor: \"pointer\",\r\n              }}\r\n            >\r\n              &laquo;\r\n            </button>\r\n            <button\r\n              onClick={() => handlePageChange(currentPage - 1)}\r\n              style={{\r\n                backgroundColor: \"white\",\r\n                border: \"1px solid #ddd\",\r\n                padding: \"5px 10px\",\r\n                margin: \"0 5px\",\r\n                borderRadius: \"5px\",\r\n                cursor: \"pointer\",\r\n              }}\r\n            >\r\n              &lsaquo;\r\n            </button>\r\n            {paginationRange[0] > 1 && (\r\n              <span\r\n                style={{\r\n                  padding: \"5px 10px\",\r\n                }}\r\n              >\r\n                ...\r\n              </span>\r\n            )}\r\n            {paginationRange.map((page) => (\r\n              <button\r\n                key={page}\r\n                onClick={() => handlePageChange(page)}\r\n                style={{\r\n                  backgroundColor: page === currentPage ? \"#e0e0e0\" : \"white\",\r\n                  fontWeight: page === currentPage ? \"bold\" : \"normal\",\r\n                  border: \"1px solid #ddd\",\r\n                  padding: \"5px 10px\",\r\n                  margin: \"0 5px\",\r\n                  borderRadius: \"5px\",\r\n                  cursor: \"pointer\",\r\n                  hover: {\r\n                    backgroundColor: \"#f0f0f0\",\r\n                  },\r\n                }}\r\n              >\r\n                {page}\r\n              </button>\r\n            ))}\r\n            {paginationRange[paginationRange.length - 1] < totalPages && (\r\n              <span\r\n                style={{\r\n                  padding: \"5px 10px\",\r\n                }}\r\n              >\r\n                ...\r\n              </span>\r\n            )}\r\n            <button\r\n              onClick={() => handlePageChange(currentPage + 1)}\r\n              style={{\r\n                backgroundColor: \"white\",\r\n                border: \"1px solid #ddd\",\r\n                padding: \"5px 10px\",\r\n                margin: \"0 5px\",\r\n                borderRadius: \"5px\",\r\n                cursor: \"pointer\",\r\n              }}\r\n            >\r\n              &rsaquo;\r\n            </button>\r\n            <button\r\n              onClick={() => handlePageChange(totalPages)}\r\n              style={{\r\n                backgroundColor: \"white\",\r\n                border: \"1px solid #ddd\",\r\n                padding: \"5px 10px\",\r\n                margin: \"0 5px\",\r\n                borderRadius: \"5px\",\r\n                cursor: \"pointer\",\r\n              }}\r\n            >\r\n              &raquo;\r\n            </button>\r\n          </div>\r\n          <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n            <select\r\n              id=\"itemsPerPage\"\r\n              value={itemsPerPage}\r\n              onChange={(e) => {\r\n                onPageChange(1)\r\n                onItemsPerPageChange(Number(e.target.value))\r\n              }}\r\n              style={{\r\n                padding: \"5px\",\r\n                marginLeft: \"10px\",\r\n                borderRadius: \"5px\",\r\n                border: \"1px solid #ddd\",\r\n                cursor: \"pointer\",\r\n              }}\r\n            >\r\n              <option value={5}>5</option>\r\n              <option value={10}>10</option>\r\n              <option value={50}>50</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import { Grid } from '@mui/material'\r\nimport React from 'react'\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Box, Button, InputBase } from '@mui/material';\r\nimport SearchTwoToneIcon from '@mui/icons-material/SearchTwoTone';\r\n\r\nfunction TableHeaderPart({\r\n    searchText = \"Search\",\r\n    title = 'Table',\r\n    addText,\r\n    handleSearch = (value) => { },\r\n    handleAdd = () => { },\r\n    isClear = false,\r\n    onClear = () => { }\r\n}) {\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <Grid container sx={{\r\n            gap: {\r\n                xs: '1rem', sx: '1rem', md: \"0px\", lg: \"0px\"\r\n            },\r\n        }}>\r\n            <Grid item xs={12} md={3} lg={3} sm={12} sx={{ padding: \"0px !important\", display: 'flex', alignItems: 'center' }}>\r\n                <h2 style={{ color: theme.palette.common.black, margin: \"0px\" }}>{title}</h2>\r\n            </Grid>\r\n            <Grid item xs={12} md={9} lg={9} sm={12} sx={{ padding: \"0px !important\" }}>\r\n                <div style={{ display: 'flex', gap: '1rem', justifyContent: 'end' }}>\r\n                    <Box sx={{ position: 'relative', padding: addText ? '0px' : '0.5rem', background: \"white\", borderRadius: '5px', display: 'flex', gap: '0.5rem', alignItems: 'center' }} >\r\n                        <Box\r\n                            sx={{\r\n                                p: { sm: theme.spacing(0.75, 1.25), xs: theme.spacing(1.25) },\r\n                                position: 'absolute',\r\n                                pointerEvents: 'none',\r\n                                display: 'flex',\r\n                                alignItems: 'center',\r\n                                justifyContent: 'center',\r\n                                color: theme.palette.common.black,\r\n                                height: '100%'\r\n                            }}\r\n                        >\r\n                            <SearchTwoToneIcon />\r\n                        </Box>\r\n                        <InputBase\r\n                            placeholder={searchText}\r\n                            sx={{\r\n                                marginLeft: '2.3rem',\r\n                                '& .MuiInputBase-root': {\r\n                                    color: theme.palette.common.black,\r\n                                    mr: 3,\r\n                                    display: 'flex',\r\n                                    alignItems: 'center'\r\n                                },\r\n                                '& .MuiInputBase-input': {\r\n                                    p: theme.spacing(1, 1, 1, 0),\r\n                                    pl: `calc(1em + ${theme.spacing(4)})`,\r\n                                    transition: theme.transitions.create('width'),\r\n                                    color: theme.palette.common.black,\r\n                                    width: { sm: '100%', md: 45 },\r\n                                    mr: { md: 3 },\r\n                                    '&:focus': {\r\n                                        width: { md: 225 }\r\n                                    }\r\n                                }\r\n                            }}\r\n                            inputProps={{ 'aria-label': 'search' }}\r\n                            onChange={(e) => handleSearch(e.target.value)}\r\n                        />\r\n                    </Box>\r\n                    {addText ? <div>\r\n                        <Button\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            onClick={handleAdd}\r\n                            style={{\r\n                                backgroundColor: theme.palette.success.main,\r\n                                textTransform: 'capitalize',\r\n                                color: theme.palette.common.white,\r\n                                ':hover': { backgroundColor: theme.palette.success.dark },\r\n                            }}\r\n                        >\r\n                            {addText}\r\n                        </Button>\r\n                    </div> : \"\"}\r\n                    {isClear ? <div>\r\n                        <Button\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            onClick={onClear}\r\n                            style={{\r\n                                backgroundColor: theme.palette.warning.main,\r\n                                textTransform: 'capitalize',\r\n                                color: theme.palette.common.white,\r\n                                ':hover': { backgroundColor: theme.palette.warning.dark },\r\n                            }}\r\n                        >\r\n                            Clear Filter\r\n                        </Button>\r\n                    </div> : \"\"}\r\n\r\n                </div>\r\n            </Grid>\r\n        </Grid >\r\n    )\r\n}\r\n\r\nexport default TableHeaderPart\r\n","import { IconButton, Select, MenuItem, FormControl, OutlinedInput, useTheme } from \"@mui/material\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { RiEdit2Fill } from \"react-icons/ri\";\r\nimport { IoCloseCircleSharp } from \"react-icons/io5\";\r\nimport { IoMdCheckmark } from \"react-icons/io\";\r\nimport InputError from \"../Basic/InputError\";\r\n\r\nfunction SelectInput({\r\n  seperatedLabel = true,\r\n  startEdit = false,\r\n  sepratedUpdate = false,\r\n  error = null,\r\n  prefix = [],\r\n  suffix,\r\n  name,\r\n  handleChange = (name, value) => console.log(name, value),\r\n  options = [],\r\n  defaultValue = \"\",\r\n  ...otherProps\r\n}) {\r\n  const [edit, setEdit] = useState(startEdit);\r\n  const [value, setValue] = useState(\"\");\r\n  const theme = useTheme();\r\n\r\n  const snakeToTitleCase = (snakeCaseStr) => {\r\n    const words = snakeCaseStr.split(\"_\");\r\n    const titleCaseStr = words\r\n      .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\r\n      .join(\" \");\r\n\r\n    return titleCaseStr;\r\n  };\r\n\r\n  useEffect(() => {\r\n    setValue(defaultValue);\r\n  }, [defaultValue]);\r\n\r\n  const MenuProps = {\r\n    PaperProps: {\r\n      style: {\r\n        maxHeight: 200,\r\n      },\r\n    },\r\n    anchorOrigin: {\r\n      vertical: \"bottom\",\r\n      horizontal: \"left\",\r\n    },\r\n    transformOrigin: {\r\n      vertical: \"top\",\r\n      horizontal: \"left\",\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          display: seperatedLabel ? \"block\" : \"flex\",\r\n          justifyContent: \"space-between\",\r\n          gap: \"1rem\",\r\n        }}\r\n      >\r\n        <div style={{ display: \"flex\", gap: \"0.5rem\" }}>\r\n          <div\r\n            style={{\r\n              padding: \"0.5rem 0px\",\r\n              color: theme.palette.common.black,\r\n              borderRadius: \"5px\",\r\n              border: \"none\",\r\n              width: \"max-content\",\r\n            }}\r\n          >\r\n            {snakeToTitleCase(name)}\r\n          </div>\r\n          {!edit ? (\r\n            <div\r\n              style={{\r\n                display: \"inline-flex\",\r\n                marginRight: \"0.3rem\",\r\n                color: theme.palette.common.black,\r\n              }}\r\n            >\r\n              <IconButton\r\n                style={{ backgroundColor: \"transparent\" }}\r\n                size=\"small\"\r\n                onClick={() => setEdit(true)}\r\n              >\r\n                <RiEdit2Fill color={theme.palette.common.black} />\r\n              </IconButton>\r\n            </div>\r\n          ) : null}\r\n          {edit && sepratedUpdate && value ? (\r\n            <div\r\n              style={{\r\n                display: \"inline-flex\",\r\n                marginRight: \"0.3rem\",\r\n                color: theme.palette.common.black,\r\n              }}\r\n            >\r\n              <IconButton\r\n                style={{ backgroundColor: \"transparent\" }}\r\n                size=\"small\"\r\n                onClick={() => {\r\n                  setValue(\"\");\r\n                  if (!sepratedUpdate) {\r\n                    handleChange(name, \"\");\r\n                  }\r\n                  setEdit(false);\r\n                }}\r\n              >\r\n                <IoCloseCircleSharp color={theme.palette.common.black} />\r\n              </IconButton>\r\n            </div>\r\n          ) : null}\r\n          {edit && sepratedUpdate && value ? (\r\n            <div\r\n              style={{\r\n                display: \"inline-flex\",\r\n                marginRight: \"0.3rem\",\r\n                color: theme.palette.common.black,\r\n              }}\r\n            >\r\n              <IconButton\r\n                style={{ backgroundColor: \"transparent\" }}\r\n                size=\"small\"\r\n                onClick={() => {\r\n                  handleChange(name, value);\r\n                  setEdit(false);\r\n                }}\r\n              >\r\n                <IoMdCheckmark color={theme.palette.common.black} />\r\n              </IconButton>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n        <FormControl\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          style={{\r\n            backgroundColor: 'white',\r\n            borderRadius: \"5px\",\r\n          }}\r\n        >\r\n          <Select\r\n            value={value}\r\n            disabled={!edit}\r\n            onChange={(e) => {\r\n              setValue(e.target.value);\r\n              if (!sepratedUpdate) {\r\n                handleChange(name, e.target.value);\r\n              }\r\n            }}\r\n            displayEmpty\r\n            startAdornment={prefix}\r\n            MenuProps={MenuProps}\r\n            input={<OutlinedInput />}\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              padding: \"0.5rem\",\r\n              color: theme.palette.common.black,\r\n              borderColor: theme.palette.text.primary,\r\n            }}\r\n            {...otherProps}\r\n          >\r\n            <MenuItem value=\"\" disabled>\r\n              {\"Select \" + snakeToTitleCase(name)}\r\n            </MenuItem>\r\n            {options.map((option, index) => (\r\n              <MenuItem key={index} value={option.value}>\r\n                {option.label}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      </div>\r\n      {error ? (\r\n        <div style={{ textAlign: \"center\" }}>\r\n          <InputError message={error} />\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SelectInput;\r\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { Grid, IconButton, useTheme } from \"@mui/material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { FaEye, FaFilter } from \"react-icons/fa\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport axiosInstance from \"../../../config/AxiosConfig\";\r\nimport AxiosInstancePaths from \"../../../config/AxiosInstancePaths\";\r\nimport { startLoading, stopLoading } from \"../../../redux/slices/loadingSlice\";\r\nimport { showErrorMessage } from \"../../../helpers/notificationService\";\r\nimport DropDrown from \"../../Basic/DropDrown\";\r\nimport { ledgerStatus, nameFilter } from \"../../../constant/Options\";\r\nimport { BsSortAlphaDown, BsSortAlphaDownAlt } from \"react-icons/bs\";\r\nimport Pagination from \"../../Basic/Pagination\";\r\nimport { createProductOptions, snakeToTitleCase } from \"../../../helpers\";\r\nimport SelectInput from \"../../Form/SelectInput\";\r\nimport TableHeaderPart from \"../../Basic/TableHeaderPart\";\r\n\r\n\r\nfunction LedgerListUser({ permission }) {\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const [ledgers, setLedgers] = useState([]);\r\n    const theme = useTheme();\r\n\r\n    const [userId, setUserId] = useState();\r\n    const [users, setUsers] = useState([]);\r\n    const [ledgersPerPage, setledgersPerPage] = useState(5);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [totalDocs, setTotalDocs] = useState(0);\r\n\r\n    const [filter, setFilter] = useState({\r\n        sortField: \"createdAt\",\r\n        sortBy: \"asc\",\r\n    });\r\n\r\n\r\n    const useDebounce = (callback, delay) => {\r\n        const timeoutRef = useRef(null);\r\n\r\n        const debounceCallback = useCallback(\r\n            (...args) => {\r\n                if (timeoutRef.current) {\r\n                    clearTimeout(timeoutRef.current);\r\n                }\r\n\r\n                timeoutRef.current = setTimeout(() => {\r\n                    callback(...args);\r\n                }, delay);\r\n            },\r\n            [callback, delay]\r\n        );\r\n\r\n        return debounceCallback;\r\n    };\r\n\r\n    const fetchLedgerList = async (search) => {\r\n\r\n        if (userId) {\r\n            try {\r\n                let queryFields = { ...filter }\r\n                delete queryFields.sortBy\r\n                delete queryFields.sortField\r\n\r\n                let query = {\r\n                    limit: ledgersPerPage,\r\n                    page: currentPage,\r\n                    user_id: userId,\r\n                    sortBy: filter.sortField,\r\n                    sortOrder: filter.sortBy,\r\n                    ...queryFields\r\n                };\r\n                if (search) {\r\n                    query.search = search;\r\n                }\r\n                const queryString = new URLSearchParams(query).toString();\r\n\r\n                dispatch(startLoading());\r\n                const response = await axiosInstance.get(`${AxiosInstancePaths.Ledgers.GET_LIST}?${queryString}`\r\n                );\r\n                if (response.data?.payload) {\r\n                    setCurrentPage(response.data?.payload?.result?.meta?.currentPage);\r\n                    setledgersPerPage(response.data?.payload?.result?.meta?.limit)\r\n                    setTotalDocs(response.data?.payload?.result?.meta?.docsFound)\r\n                    setLedgers(response.data?.payload?.result?.data);\r\n                }\r\n                dispatch(stopLoading());\r\n            } catch (error) {\r\n                console.log(error);\r\n                showErrorMessage(error?.response?.data?.message);\r\n                dispatch(stopLoading());\r\n            }\r\n        }\r\n    }\r\n\r\n    const debouncedFetchUserList = useDebounce(fetchLedgerList, 500);\r\n\r\n    const handleSearchChange = (value) => {\r\n        const newSearchTerm = value;\r\n        debouncedFetchUserList(newSearchTerm);\r\n    };\r\n\r\n    const handleFilter = (name, value) => {\r\n        if (name === \"invoice_id\" || name === \"bill_amount\" || name === \"payment_amount\" || name === \"createdAt\") {\r\n            setFilter({\r\n                sortBy: value,\r\n                sortField: name,\r\n            });\r\n        } else {\r\n            setFilter({\r\n                [name]: value,\r\n            });\r\n        }\r\n    };\r\n\r\n    const viewLedger = (id) => {\r\n        navigate(`/ledgers/view/${id}`);\r\n    };\r\n\r\n\r\n    const fetchUserList = async () => {\r\n        try {\r\n            dispatch(startLoading());\r\n            const response = await axiosInstance.get(\r\n                AxiosInstancePaths.Users.GET_LIST + `?pagination=false`\r\n            );\r\n            if (response.data?.payload) {\r\n                setUsers(response.data?.payload?.result?.data);\r\n            }\r\n            dispatch(stopLoading());\r\n        } catch (error) {\r\n            console.log(error);\r\n            showErrorMessage(error?.response?.data?.message);\r\n            dispatch(stopLoading());\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        fetchUserList()\r\n        fetchLedgerList();\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        fetchLedgerList();\r\n        // eslint-disable-next-line\r\n    }, [filter, userId])\r\n\r\n    return (\r\n        <div>\r\n            <h2 style={{ color: theme.palette.common.black, margin: \"0px\" }}>User Ledgers</h2>\r\n            <Grid container spacing={2} style={{ marginBottom: '0.5rem' }}>\r\n                <Grid item xs={6} >\r\n                    <SelectInput\r\n                        name=\"user_id\"\r\n                        defaultValue={userId}\r\n                        startEdit={true}\r\n                        options={createProductOptions(users, \"name\")}\r\n                        handleChange={(name, value) => setUserId(value)}\r\n                    />\r\n                </Grid>\r\n                {/* <Grid item xs={12} md={6} lg={6} sm={12}>\r\n                <SelectInput\r\n                  name=\"status\"\r\n                  error={errors?.status?.message}\r\n                  startEdit={true}\r\n                  options={statusOption}\r\n                  handleChange={handleSelectChange}\r\n                />\r\n              </Grid> */}\r\n            </Grid>\r\n            <TableHeaderPart\r\n                // addText=\"View User Ledger\"\r\n                title=\"Ledgers\"\r\n                searchText=\"Search by Invoice or Type\"\r\n                // handleAdd={() => navigate(\"/ledgers/user\")}\r\n                handleSearch={handleSearchChange}\r\n                isClear={true}\r\n                onClear={() => {\r\n                    setFilter({\r\n                        sortField: \"createdAt\",\r\n                        sortBy: \"asc\",\r\n                    })\r\n                }}\r\n            />\r\n            <div style={{ width: \"100%\", marginTop: \"1rem\" }}>\r\n                <div style={{\r\n                    fontWeight: \"bold\",\r\n                    color: theme.palette.text.primary,\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    padding: \"15px\",\r\n                    marginTop: \"1rem\",\r\n                    backgroundColor: theme.palette.background.paper,\r\n                    borderRadius: \"10px\",\r\n                    boxShadow: theme.shadows[1],\r\n                }}>\r\n                    <div style={{ flex: 1, display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\r\n                        Sr. No.\r\n                    </div>\r\n                    <div style={{ flex: 1, display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\r\n                        Invoice Id\r\n                        <DropDrown\r\n                            name=\"invoice_id\"\r\n                            icon={\r\n                                filter?.sortField &&\r\n                                    filter.sortField === \"invoice_id\" &&\r\n                                    filter.sortBy !== \"asc\" ? (\r\n                                    <BsSortAlphaDownAlt color={theme.palette.common.black} size={15} />\r\n                                ) : (\r\n                                    <BsSortAlphaDown color={theme.palette.common.black} size={15} />\r\n                                )\r\n                            }\r\n                            onSelect={handleFilter}\r\n                            options={nameFilter}\r\n                            value={filter?.sortField &&\r\n                                filter.sortField === \"invoice_id\" ?\r\n                                filter.sortBy : \"\"}\r\n                        />\r\n                    </div>\r\n                    <div style={{ flex: 1, display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\r\n                        Type\r\n                        <DropDrown\r\n                            name=\"type\"\r\n                            icon={<FaFilter color=\"#0B476D\" size={12} />}\r\n                            value={\"type\" in filter ? filter.type || \"false\" : \"\"}\r\n                            onSelect={handleFilter}\r\n                            options={ledgerStatus}\r\n                        />\r\n                    </div>\r\n                    <div style={{ flex: 1, display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\r\n                        Ledger Amount\r\n                        <DropDrown\r\n                            name=\"payment_amount\"\r\n                            icon={\r\n                                filter?.sortField &&\r\n                                    filter.sortField === \"payment_amount\" &&\r\n                                    filter.sortBy !== \"asc\" ? (\r\n                                    <BsSortAlphaDownAlt color={theme.palette.common.black} size={15} />\r\n                                ) : (\r\n                                    <BsSortAlphaDown color={theme.palette.common.black} size={15} />\r\n                                )\r\n                            }\r\n                            onSelect={handleFilter}\r\n                            options={nameFilter}\r\n                            value={filter?.sortField &&\r\n                                filter.sortField === \"payment_amount\" ?\r\n                                filter.sortBy : \"\"}\r\n                        />\r\n                    </div>\r\n                    <div style={{ flex: 1, display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\r\n                        Bill Amount\r\n                        <DropDrown\r\n                            name=\"bill_amount\"\r\n                            icon={\r\n                                filter?.sortField &&\r\n                                    filter.sortField === \"bill_amount\" &&\r\n                                    filter.sortBy !== \"asc\" ? (\r\n                                    <BsSortAlphaDownAlt color={theme.palette.common.black} size={15} />\r\n                                ) : (\r\n                                    <BsSortAlphaDown color={theme.palette.common.black} size={15} />\r\n                                )\r\n                            }\r\n                            onSelect={handleFilter}\r\n                            options={nameFilter}\r\n                            value={filter?.sortField &&\r\n                                filter.sortField === \"bill_amount\" ?\r\n                                filter.sortBy : \"\"}\r\n                        />\r\n                    </div>\r\n                    <div style={{ flex: 1, display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\r\n                        Action\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {ledgers.length > 0 ? ledgers.map((bill, billIndex) => (\r\n                <div\r\n                    key={billIndex}\r\n                    style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-between\",\r\n                        padding: \"15px\",\r\n                        marginTop: \"1rem\",\r\n                        backgroundColor: theme.palette.background.paper,\r\n                        borderRadius: \"10px\",\r\n                        boxShadow: theme.shadows[1],\r\n                    }}\r\n                >\r\n                    <div style={{ flex: 1, display: \"flex\", gap: '0.2rem', justifyContent: \"center\", alignItems: \"center\" }}>\r\n                        {ledgersPerPage * (currentPage - 1) + billIndex + 1}\r\n                    </div>\r\n                    <div style={{ flex: 1, display: \"flex\", gap: '0.2rem', justifyContent: \"center\", alignItems: \"center\" }}>\r\n                        {bill.invoice_id}\r\n                    </div>\r\n                    <div style={{ flex: 1, display: \"flex\", gap: '0.2rem', justifyContent: \"center\", alignItems: \"center\" }}>\r\n                        {snakeToTitleCase(bill?.type)}\r\n                    </div>\r\n                    <div style={{ flex: 1, display: \"flex\", gap: '0.2rem', justifyContent: \"center\", alignItems: \"center\" }}>\r\n                        {bill.payment_amount}\r\n                    </div>\r\n                    <div style={{ flex: 1, display: \"flex\", gap: '0.2rem', justifyContent: \"center\", alignItems: \"center\" }}>\r\n                        {bill.bill_amount}\r\n                    </div>\r\n                    <div style={{ flex: 1, display: \"flex\", gap: '0.2rem', justifyContent: \"center\", alignItems: \"center\" }}>\r\n                        {permission?.can_read ? <IconButton\r\n                            size=\"small\"\r\n                            onClick={() => viewLedger(bill._id)}\r\n                            style={{ color: theme.palette.info.main }}\r\n                        >\r\n                            <FaEye />\r\n                        </IconButton> : ''}\r\n                    </div>\r\n                </div>\r\n            )) : (\r\n                <div\r\n                    style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                        padding: \"15px\",\r\n                        marginTop: \"1rem\",\r\n                        backgroundColor: theme.palette.background.paper,\r\n                        borderRadius: \"10px\",\r\n                        boxShadow: theme.shadows[1],\r\n                    }}\r\n                >\r\n                    No Ledgers Found\r\n                </div>\r\n            )}\r\n            <Pagination\r\n                currentPage={currentPage}\r\n                totalItems={totalDocs}\r\n                itemsPerPage={ledgersPerPage}\r\n                onPageChange={setCurrentPage}\r\n                onItemsPerPageChange={setledgersPerPage}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LedgerListUser\r\n","import axios from \"axios\";\r\nimport AxiosInstancePaths from \"./AxiosInstancePaths\";\r\nimport { AppConfig } from \"./AppConfig\";\r\nimport { clearLocalStorage } from \"../helpers\";\r\n\r\n// Create an Axios instance with default settings\r\nconst axiosInstance = axios.create({\r\n  baseURL: AxiosInstancePaths.base_url,\r\n  timeout: 10000, // Request timeout in milliseconds\r\n  headers: {\r\n    Accept: \"application/json, application/octet-stream\",\r\n  },\r\n  withCredentials: false,\r\n});\r\n\r\n// Flag to check if the token is being refreshed\r\nlet isRefreshing = false;\r\nlet refreshSubscribers = [];\r\n\r\n// Function to subscribe to token refresh\r\nfunction subscribeTokenRefresh(cb) {\r\n  refreshSubscribers.push(cb);\r\n}\r\n\r\n// Function to notify subscribers about new token\r\nfunction onRefreshed(token) {\r\n  refreshSubscribers.forEach((cb) => cb(token));\r\n  refreshSubscribers = [];\r\n}\r\n\r\n// Add a request interceptor\r\naxiosInstance.interceptors.request.use(\r\n  (config) => {\r\n    // Add the authorization token to the request headers if available\r\n    const token = localStorage.getItem(AppConfig.localStorageKeys.token);\r\n    if (token) {\r\n      config.headers[\"Authorization\"] = `Bearer ${token}`;\r\n      config.withCredentials = true;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Add a response interceptor\r\naxiosInstance.interceptors.response.use(\r\n  (response) => {\r\n    // Any status code within the range of 2xx triggers this function\r\n    return response;\r\n  },\r\n  (error) => {\r\n    const { config, response } = error;\r\n    const originalRequest = config;\r\n    if (response.data.message === \"Token has expired\") {\r\n      if (!isRefreshing) {\r\n        isRefreshing = true;\r\n        const refreshToken = localStorage.getItem(\r\n          AppConfig.localStorageKeys.refresh_token\r\n        );\r\n\r\n        return axiosInstance\r\n          .post(AxiosInstancePaths.refresh_token_url, { refreshToken })\r\n          .then(({ data }) => {\r\n            const new_token = data?.payload?.accessToken;\r\n\r\n            localStorage.setItem(AppConfig.localStorageKeys.token, new_token);\r\n            isRefreshing = false;\r\n            onRefreshed(new_token);\r\n            originalRequest.headers[\"Authorization\"] = `Bearer ${new_token}`;\r\n            return axiosInstance(originalRequest);\r\n          })\r\n          .catch((err) => {\r\n            console.error(\"Failed to refresh token:\", err);\r\n            clearLocalStorage();\r\n            window.location.href = AxiosInstancePaths.login_path;\r\n            return Promise.reject(error);\r\n          });\r\n      }\r\n\r\n      const retryOriginalRequest = new Promise((resolve) => {\r\n        subscribeTokenRefresh((token) => {\r\n          originalRequest.headers[\"Authorization\"] = `Bearer ${token}`;\r\n          resolve(axiosInstance(originalRequest));\r\n        });\r\n      });\r\n      return retryOriginalRequest;\r\n    }\r\n\r\n    if (response.data.message === \"Token is invalid\") {\r\n      clearLocalStorage();\r\n      window.location.href = AxiosInstancePaths.login_path;\r\n    }\r\n\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default axiosInstance;\r\n","export const nameFilter = [\r\n  { label: \"Sort A to Z\", value: \"asc\" },\r\n  { label: \"Sort Z to A\", value: \"desc\" },\r\n];\r\n\r\nexport const cashFilter = [\r\n  { label: \"High To Low\", value: \"desc\" },\r\n  { label: \"Low To High\", value: \"asc\" },\r\n];\r\n\r\nexport const activeFilter = [\r\n  { label: \"Active\", value: true },\r\n  { label: \"Inactive\", value: false },\r\n];\r\nexport const statusUserFilter = [\r\n  { label: \"Unverified\", value: false },\r\n  { label: \"verified\", value: true },\r\n];\r\n\r\nexport const AdminUserFilter = [\r\n  { label: \"App User\", value: true },\r\n  { label: \"Admin\", value: false },\r\n];\r\n\r\nexport const dateFilter = [\r\n  { label: \"Newest First\", value: \"desc\" },\r\n  { label: \"Oldest First\", value: \"asc\" },\r\n];\r\n\r\nexport const totalAmountFilter = [\r\n  { label: \"Highest First\", value: \"desc\" },\r\n  { label: \"Lowest First\", value: \"asc\" },\r\n];\r\n\r\nexport const orderStatusOption = [\r\n  { label: \"Pending\", value: \"pending\" },\r\n  { label: \"Confirm\", value: \"confirm\" },\r\n  { label: \"Reject\", value: \"rejected\" },\r\n  { label: \"Delivered\", value: \"delivered\" },\r\n  { label: \"Cancelled\", value: \"cancelled\" },\r\n  { label: \"Return Requested\", value: \"return_requested\" },\r\n  { label: \"Return Accepeted\", value: \"return_accepeted\" },\r\n  { label: \"Return Rejected\", value: \"return_rejected\" },\r\n  { label: \"Return Fulfilled\", value: \"return_fulfilled\" },\r\n];\r\n\r\nexport const ledgerStatus = [\r\n  { label: \"Credit\", value: \"credit\" },\r\n  { label: \"Debit\", value: \"debit\" },\r\n];\r\n\r\nexport const billStatus = [\r\n  { label: \"Unpaid\", value: \"unpaid\" },\r\n  { label: \"Paid\", value: \"paid\" },\r\n];\r\n\r\nexport const paymentMethodsOption = [\r\n  { label: \"Cash\", value: \"cash\" },\r\n  { label: \"Online\", value: \"online\" },\r\n];\r\n\r\nexport const productBaseUnitOption = [\r\n  { label: \"GM\", value: \"GM\" },\r\n  { label: \"ML\", value: \"ML\" },\r\n  { label: \"KG\", value: \"KG\" },\r\n  { label: \"LTR\", value: \"LTR\" },\r\n];\r\n\r\nexport const offerType = [\r\n  { label: \"Percentage\", value: \"percentage\" },\r\n  { label: \"Fixed Amount\", value: \"fixed_amount\" },\r\n  { label: \"Tiered\", value: \"tiered\" },\r\n  { label: \"Buy X Get Y\", value: \"buy_x_get_y\" },\r\n  { label: \"Bundle\", value: \"bundle\" },\r\n  { label: \"Referral\", value: \"referral\" },\r\n  { label: \"Coupon\", value: \"coupon\" },\r\n];\r\n\r\nexport const couponType = [\r\n  { label: \"Percentage\", value: \"percentage\" },\r\n  { label: \"Amount\", value: \"amount\" },\r\n];\r\n","import { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst options = {\r\n  position: \"top-center\",\r\n  closeButton: false,\r\n  progress: false,\r\n};\r\n\r\nexport const showSuccessMessage = (message) => {\r\n  toast.success(message, options);\r\n};\r\n\r\nexport const showErrorMessage = (message) => {\r\n  toast.error(message, options);\r\n};\r\n\r\nexport const showWarningMessage = (message) => {\r\n  toast.warn(message, options);\r\n};\r\n\r\nexport const showInfoMessage = (message) => {\r\n  toast.info(message, options);\r\n};\r\n"],"names":["_ref","icon","onSelect","name","options","value","anchorEl","setAnchorEl","React","handleClose","isSelected","optionValue","toString","_jsxs","style","position","children","_jsx","IconButton","onClick","event","currentTarget","Menu","open","Boolean","onClose","map","option","optionIndex","MenuItem","handleSelect","selectedValue","selected","ListItemText","primary","label","fontWeight","message","shouldShake","setShouldShake","useState","useEffect","timer","setTimeout","clearTimeout","errorContainerStyle","color","fontSize","padding","textAlign","animation","snakeCaseStr","split","word","charAt","toUpperCase","slice","join","currentPage","totalItems","itemsPerPage","onPageChange","onItemsPerPageChange","handlePageChange","page","totalPages","Math","ceil","paginationRange","getPaginationRange","totalNumbers","startPage","endPage","Array","from","length","_","i","_Fragment","display","justifyContent","alignItems","backgroundColor","borderRadius","boxShadow","marginTop","border","margin","cursor","hover","id","onChange","e","Number","target","marginLeft","searchText","title","addText","handleSearch","handleAdd","isClear","onClear","theme","useTheme","Grid","container","sx","gap","xs","md","lg","item","sm","palette","common","black","Box","background","p","spacing","pointerEvents","height","SearchTwoToneIcon","InputBase","placeholder","mr","pl","concat","transition","transitions","create","width","inputProps","Button","fullWidth","variant","success","main","textTransform","white","dark","warning","seperatedLabel","startEdit","sepratedUpdate","error","prefix","suffix","handleChange","console","log","defaultValue","otherProps","edit","setEdit","setValue","snakeToTitleCase","marginRight","size","RiEdit2Fill","IoCloseCircleSharp","IoMdCheckmark","FormControl","Select","disabled","displayEmpty","startAdornment","MenuProps","PaperProps","maxHeight","anchorOrigin","vertical","horizontal","transformOrigin","input","OutlinedInput","borderColor","text","index","InputError","permission","navigate","useNavigate","dispatch","useDispatch","ledgers","setLedgers","userId","setUserId","users","setUsers","ledgersPerPage","setledgersPerPage","setCurrentPage","totalDocs","setTotalDocs","filter","setFilter","sortField","sortBy","fetchLedgerList","async","_response$data","queryFields","query","limit","user_id","sortOrder","search","queryString","URLSearchParams","startLoading","response","axiosInstance","get","AxiosInstancePaths","Ledgers","GET_LIST","_response$data2","_response$data2$paylo","_response$data2$paylo2","_response$data2$paylo3","_response$data3","_response$data3$paylo","_response$data3$paylo2","_response$data3$paylo3","_response$data4","_response$data4$paylo","_response$data4$paylo2","_response$data4$paylo3","_response$data5","_response$data5$paylo","_response$data5$paylo2","data","payload","result","meta","docsFound","stopLoading","_error$response","_error$response$data","showErrorMessage","debouncedFetchUserList","useDebounce","callback","delay","timeoutRef","useRef","debounceCallback","useCallback","_len","arguments","args","_key","current","handleFilter","_response$data6","Users","_response$data7","_response$data7$paylo","_response$data7$paylo2","_error$response2","_error$response2$data","fetchUserList","marginBottom","SelectInput","createProductOptions","TableHeaderPart","paper","shadows","flex","DropDrown","BsSortAlphaDownAlt","BsSortAlphaDown","nameFilter","FaFilter","type","ledgerStatus","bill","billIndex","invoice_id","payment_amount","bill_amount","can_read","viewLedger","_id","info","FaEye","Pagination","axios","baseURL","base_url","timeout","headers","Accept","withCredentials","isRefreshing","refreshSubscribers","interceptors","request","use","config","token","localStorage","getItem","AppConfig","localStorageKeys","Promise","reject","originalRequest","refreshToken","refresh_token","post","refresh_token_url","then","_data$payload","new_token","accessToken","setItem","forEach","cb","catch","err","clearLocalStorage","window","location","href","login_path","resolve","push","activeFilter","statusUserFilter","AdminUserFilter","dateFilter","totalAmountFilter","orderStatusOption","billStatus","paymentMethodsOption","productBaseUnitOption","offerType","couponType","closeButton","progress","showSuccessMessage","toast"],"sourceRoot":""}