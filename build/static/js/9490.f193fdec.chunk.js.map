{"version":3,"file":"static/js/9490.f193fdec.chunk.js","mappings":"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","sources":["component/pages/Products/Category/ViewCategory.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Card, CardContent, Grid, Typography } from \"@mui/material\";\r\nimport FilledInput from \"../../../Basic/FilledInput\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport axiosInstance from \"../../../../config/AxiosConfig\";\r\nimport AxiosInstancePaths from \"../../../../config/AxiosInstancePaths\";\r\nimport { startLoading, stopLoading } from \"../../../../redux/slices/loadingSlice\";\r\nimport { showErrorMessage } from \"../../../../helpers/notificationService\";\r\nimport SelectInput from \"../../../Form/SelectInput\";\r\nimport { createGeneralOptions } from \"../../../../helpers\";\r\nimport ImageWithPreview from \"../../../Basic/ImagePreview\";\r\nimport ShowDescription from \"../../../Form/ShowDescription\";\r\nimport BackNavigate from \"../../../Basic/BackNavigate\";\r\n\r\n\r\nfunction ViewCategory() {\r\n  const { id } = useParams();\r\n  const [category, setCategory] = useState();\r\n  const dispatch = useDispatch();\r\n  const [langCode, setLangCode] = useState(\"\")\r\n  const [languages, setLanguages] = useState([]);\r\n\r\n  const fetCategoryData = async () => {\r\n    try {\r\n      dispatch(startLoading());\r\n      const response = await axiosInstance.get(\r\n        AxiosInstancePaths.Categories.GET_BY_ID + id, {\r\n        params: {\r\n          lang_code: langCode || 'en'\r\n        },\r\n      }\r\n      );\r\n      if (response.data?.payload) {\r\n        setCategory(response.data?.payload?.result);\r\n      }\r\n      dispatch(stopLoading());\r\n    } catch (error) {\r\n      console.log(error);\r\n\r\n      showErrorMessage(error?.response?.data?.message);\r\n      dispatch(stopLoading());\r\n    }\r\n  };\r\n  const fetchLanguageData = async () => {\r\n    try {\r\n      dispatch(startLoading());\r\n      const response = await axiosInstance.get(\r\n        AxiosInstancePaths.Languages.GET_LIST\r\n      );\r\n      if (response.data?.payload) {\r\n        setLanguages(response.data?.payload?.result?.data);\r\n        setLangCode(response.data?.payload?.result?.data[0]?.lang_code)\r\n      }\r\n      dispatch(stopLoading());\r\n    } catch (error) {\r\n      console.log(error);\r\n\r\n      showErrorMessage(error?.response?.data?.message);\r\n      dispatch(stopLoading());\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetCategoryData();\r\n    // eslint-disable-next-line\r\n  }, [id, langCode]);\r\n\r\n  useEffect(() => {\r\n    fetchLanguageData()\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <Grid container spacing={2} alignItems=\"stretch\" style={{ display: 'flex', justifyContent: 'end' }}>\r\n      <Grid item xs={12} sx={{ paddingTop: { xs: '0.5rem !important', sx: '0.5rem !important', md: '0px !important' } }} >\r\n        <BackNavigate />\r\n      </Grid>\r\n      <Grid item xs={12} md={6}>\r\n        <Card style={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\r\n          <CardContent style={{ flex: 1 }}>\r\n            <Typography variant=\"h4\" style={{ fontWeight: \"bold\" }} sx={{ marginBottom: \"0.5rem\" }}>\r\n              Category Details\r\n            </Typography>\r\n\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sx={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                <ImageWithPreview\r\n                  src={category?.logo ? AxiosInstancePaths.base_url + category?.logo : ''}\r\n                  alt=\"User Profile\"\r\n                  height=\"145px\"\r\n                  width=\"145px\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} md={6} lg={6} sm={12}>\r\n                <SelectInput\r\n                  name=\"language\"\r\n                  startEdit={true}\r\n                  seperatedLabel={true}\r\n                  defaultValue={langCode}\r\n                  options={createGeneralOptions(languages, \"lang_name\", \"lang_code\")}\r\n                  handleChange={(name, value) => setLangCode(value)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} md={6} lg={6} sm={12}>\r\n                <FilledInput\r\n                  label={\"category_name\"}\r\n                  value={category?.category_name || \"Not Added\"}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} md={12} lg={12} sm={12}>\r\n                <Typography variant=\"h4\" style={{ fontWeight: \"bold\" }}>\r\n                  Description\r\n                </Typography>\r\n                <ShowDescription description={category?.description} />\r\n              </Grid>\r\n            </Grid>\r\n\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default ViewCategory;\r\n"],"names":["id","useParams","category","setCategory","useState","dispatch","useDispatch","langCode","setLangCode","languages","setLanguages","useEffect","async","_response$data","startLoading","response","axiosInstance","get","AxiosInstancePaths","Categories","GET_BY_ID","params","lang_code","_response$data2","_response$data2$paylo","data","payload","result","stopLoading","error","_error$response","_error$response$data","console","log","showErrorMessage","message","fetCategoryData","_response$data3","Languages","GET_LIST","_response$data4","_response$data4$paylo","_response$data4$paylo2","_response$data5","_response$data5$paylo","_response$data5$paylo2","_response$data5$paylo3","_error$response2","_error$response2$data","fetchLanguageData","_jsxs","Grid","container","spacing","alignItems","style","display","justifyContent","children","_jsx","item","xs","sx","paddingTop","md","BackNavigate","Card","height","flexDirection","CardContent","flex","Typography","variant","fontWeight","marginBottom","ImageWithPreview","src","logo","base_url","alt","width","lg","sm","SelectInput","name","startEdit","seperatedLabel","defaultValue","options","createGeneralOptions","handleChange","value","FilledInput","label","category_name","ShowDescription","description"],"sourceRoot":""}