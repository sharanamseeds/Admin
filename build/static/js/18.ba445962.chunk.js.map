{"version":3,"file":"static/js/18.ba445962.chunk.js","mappings":"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","sources":["component/pages/Products/Category/AddCategory.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport TextInput from \"../../../Form/TextInput\";\r\nimport { Button, Card, CardContent, Grid, Typography } from \"@mui/material\";\r\nimport FileUpload from \"../../../Form/FileUpload\";\r\nimport Editor from \"../../../Form/Editor\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { CategorySchema, validateSchema } from \"../../../../validation/validationSchema\";\r\nimport { createGeneralOptions, formatErrorObject, objectToFormData } from \"../../../../helpers\";\r\nimport { startLoading, stopLoading } from \"../../../../redux/slices/loadingSlice\";\r\nimport { showErrorMessage, showSuccessMessage } from \"../../../../helpers/notificationService\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axiosInstance from \"../../../../config/AxiosConfig\";\r\nimport AxiosInstancePaths from \"../../../../config/AxiosInstancePaths\";\r\nimport SelectInput from \"../../../Form/SelectInput\";\r\nimport { useTheme } from \"@mui/material\";\r\nimport ImageWithPreview from \"../../../Basic/ImagePreview\";\r\nimport BackNavigate from \"../../../Basic/BackNavigate\";\r\n\r\n\r\nfunction AddCategory() {\r\n  const [formData, setFormData] = useState({});\r\n  const [errors, setErrors] = useState({});\r\n  const theme = useTheme();\r\n  const navigate = useNavigate()\r\n  const dispatch = useDispatch();\r\n  const [langCode, setLangCode] = useState(\"\")\r\n  const [languages, setLanguages] = useState([]);\r\n\r\n  const handleSelectChange = (name, value) => {\r\n    const keys = name.split(\".\");\r\n    setFormData((prevData) => {\r\n      let newData = { ...prevData };\r\n      let current = newData;\r\n      for (let i = 0; i < keys.length - 1; i++) {\r\n        current[keys[i]] = current[keys[i]] || {};\r\n        current = current[keys[i]];\r\n      }\r\n      current[keys[keys.length - 1]] = value;\r\n      return newData;\r\n    });\r\n\r\n    setErrors((prevErrors) => {\r\n      let newErrors = { ...prevErrors };\r\n      let current = newErrors;\r\n      for (let i = 0; i < keys.length - 1; i++) {\r\n        current[keys[i]] = current[keys[i]] || {};\r\n        current = current[keys[i]];\r\n      }\r\n      delete current[keys[keys.length - 1]];\r\n      return newErrors;\r\n    });\r\n  };\r\n\r\n  const addCategory = async () => {\r\n    try {\r\n      const isValid = await validateSchema(CategorySchema, formData, setErrors);\r\n      if (!isValid) {\r\n        return;\r\n      }\r\n\r\n      const newFormData = new FormData();\r\n      let documents = {}\r\n      let tempFormData = { ...formData };\r\n      if (formData?.logo) {\r\n        documents.logo = formData.logo\r\n        delete tempFormData.logo\r\n      }\r\n\r\n      objectToFormData(newFormData, documents);\r\n      dispatch(startLoading());\r\n      const response = await axiosInstance.post(\r\n        AxiosInstancePaths.Categories.ADD,\r\n        newFormData, {\r\n        params: {\r\n          lang_code: langCode || 'en',\r\n          payload: JSON.stringify(tempFormData)\r\n        },\r\n      }\r\n      );\r\n\r\n      showSuccessMessage(response?.data?.message);\r\n      dispatch(stopLoading());\r\n      navigate('/category')\r\n    } catch (error) {\r\n      console.log(error);\r\n      if (error?.response?.data?.errors) {\r\n        setErrors(formatErrorObject(error?.response?.data?.errors))\r\n      }\r\n      showErrorMessage(error?.response?.data?.message);\r\n      dispatch(stopLoading());\r\n    }\r\n  };\r\n  const fetchLanguageData = async () => {\r\n    try {\r\n      dispatch(startLoading());\r\n      const response = await axiosInstance.get(\r\n        AxiosInstancePaths.Languages.GET_LIST\r\n      );\r\n      if (response.data?.payload) {\r\n        setLanguages(response.data?.payload?.result?.data);\r\n        setLangCode(response.data?.payload?.result?.data[0]?.lang_code)\r\n      }\r\n      dispatch(stopLoading());\r\n    } catch (error) {\r\n      console.log(error);\r\n      if (error?.response?.data?.errors) {\r\n        setErrors(formatErrorObject(error?.response?.data?.errors))\r\n      }\r\n      showErrorMessage(error?.response?.data?.message);\r\n      dispatch(stopLoading());\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchLanguageData()\r\n    //eslint-disable-next-line  \r\n  }, [])\r\n  return (\r\n    <Grid container spacing={2} alignItems=\"stretch\" style={{ display: 'flex', justifyContent: 'end' }}>\r\n      <Grid item xs={12} sx={{ paddingTop: { xs: '0.5rem !important', sx: '0.5rem !important', md: '0px !important' } }} >\r\n        <BackNavigate />\r\n      </Grid>\r\n      <Grid item xs={12} md={6}>\r\n        <Card style={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\r\n          <CardContent style={{ flex: 1 }}>\r\n            <Typography variant=\"h4\" style={{ fontWeight: \"bold\", marginBottom: '0.75rem' }}>\r\n              Category Details\r\n            </Typography>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={12} sx={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                <ImageWithPreview\r\n                  src={\r\n                    formData?.logo?.length > 0\r\n                      ? URL.createObjectURL(formData.logo[0])\r\n                      : \"\"\r\n                  }\r\n                  alt=\"Brand Logo\"\r\n                  height=\"145px\"\r\n                  width=\"145px\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} md={6} lg={6} sm={12}>\r\n                <FileUpload inputName=\"logo*\" handleChange={(name, value) => handleSelectChange('logo', value)} error={errors?.logo?.message} />\r\n              </Grid>\r\n              <Grid item xs={12} md={6} lg={6} sm={12}>\r\n                <SelectInput\r\n                  name=\"language\"\r\n                  startEdit={true}\r\n                  seperatedLabel={false}\r\n                  defaultValue={langCode}\r\n                  options={createGeneralOptions(languages, \"lang_name\", \"lang_code\")}\r\n                  handleChange={(name, value) => setLangCode(value)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} md={6} lg={6} sm={12}>\r\n                <TextInput\r\n                  name={\"category_name*\"}\r\n                  error={errors?.category_name?.message}\r\n                  startEdit={true}\r\n                  handleChange={(name, value) => handleSelectChange('category_name', value)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} md={12} lg={12} sm={12}>\r\n                <Editor\r\n                  name={\"description*\"}\r\n                  error={errors?.description?.message}\r\n                  defaultValue={formData?.description || \"\"}\r\n                  handleChange={(name, value) => handleSelectChange('description', value)}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item xs={12} display=\"flex\" gap={\"1rem\"} justifyContent=\"end\">\r\n        <Button\r\n          fullWidth\r\n          variant=\"contained\"\r\n          onClick={addCategory}\r\n          sx={{\r\n            color: theme.palette.common.white,\r\n            width: \"max-content\",\r\n            backgroundColor: theme.palette.success.main,\r\n            \"&:hover\": {\r\n              backgroundColor: theme.palette.success.main,\r\n            },\r\n          }}\r\n        >\r\n          Add Category\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default AddCategory;\r\n"],"names":["_formData$logo","_errors$logo","_errors$category_name","_errors$description","formData","setFormData","useState","errors","setErrors","theme","useTheme","navigate","useNavigate","dispatch","useDispatch","langCode","setLangCode","languages","setLanguages","handleSelectChange","name","value","keys","split","prevData","newData","current","i","length","prevErrors","newErrors","useEffect","async","_response$data2","startLoading","response","axiosInstance","get","AxiosInstancePaths","Languages","GET_LIST","_response$data3","_response$data3$paylo","_response$data3$paylo2","_response$data4","_response$data4$paylo","_response$data4$paylo2","_response$data4$paylo3","data","payload","result","lang_code","stopLoading","error","_error$response4","_error$response4$data","_error$response6","_error$response6$data","_error$response5","_error$response5$data","console","log","formatErrorObject","showErrorMessage","message","fetchLanguageData","_jsxs","Grid","container","spacing","alignItems","style","display","justifyContent","children","_jsx","item","xs","sx","paddingTop","md","BackNavigate","Card","height","flexDirection","CardContent","flex","Typography","variant","fontWeight","marginBottom","sm","ImageWithPreview","src","logo","URL","createObjectURL","alt","width","lg","FileUpload","inputName","handleChange","SelectInput","startEdit","seperatedLabel","defaultValue","options","createGeneralOptions","TextInput","category_name","Editor","description","gap","Button","fullWidth","onClick","_response$data","validateSchema","CategorySchema","newFormData","FormData","documents","tempFormData","objectToFormData","post","Categories","ADD","params","JSON","stringify","showSuccessMessage","_error$response","_error$response$data","_error$response3","_error$response3$data","_error$response2","_error$response2$data","color","palette","common","white","backgroundColor","success","main"],"sourceRoot":""}